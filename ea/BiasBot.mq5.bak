#include <Trade\Trade.mqh>
#include "../common/Globals.mqh"
#include "../data/MarketDataService.mqh"
#include "../logic/SignalService.mqh"
#include "../logic/TradeService.mqh"
#include "../logic/TicketService.mqh"

// Volume profiles defined in original file
static const double volumes1[19] = {0.03,0.04,0.05,0.06,0.07,0.08,0.09,0.1,0.1,
                                    0.09,0.08,0.07,0.06,0.05,0.05,0.05,0.04,0.03,0.03};
static const double volumes2[10] = {0.05,0.07,0.09,0.11,0.13,0.16,0.16,0.13,0.09,0.07};

int jump = 1;
int targetByIndex1;
int targetByIndex2;
bool dailyBiasRunning = false;

int OnInit(){
  if(jump==1) {
    InitVolumes(volumes1, ArraySize(volumes1), 1);
    targetByIndex1 = 12; targetByIndex2 = 19;
  } else {
    InitVolumes(volumes2, ArraySize(volumes2), 1);
    targetByIndex1 = 5; targetByIndex2 = 10;
  }
  EventSetTimer(1);
  TicketInit();
  return INIT_SUCCEEDED;
}

void OnDeinit(const int reason){
  EventKillTimer();
}

void OnTick(){
  UpdateTickets();
}

void OnTimer(){
  static bool initializedToday = false;
  MqlDateTime tm; TimeToStruct(TimeCurrent(), tm);
  if(tm.hour==7 && tm.min==0 && !initializedToday){
    StartDailyBias();
    initializedToday = true;
  }
  if(dailyBiasRunning) ScanDailyBias();
  if(tm.hour!=7) initializedToday = false;
}

void OnTradeTransaction(const MqlTradeTransaction& trans,
                        const MqlTradeRequest& request,
                        const MqlTradeResult& result) {
  TicketOnTradeTransaction(trans, request, result);
}
