#ifndef __START_BIAS_SERVICE_MQH__
#define __START_BIAS_SERVICE_MQH__

#import "kernel32.dll"
int  WinExec(string cmd, int nShow);
#import

input bool  Skip_StartBiasService = false;   // b·∫≠t true n·∫øu ƒë√£ ch·∫°y service tr∆∞·ªõc
#define  MAX_WAIT_MS  15000                 // 15s ch·ªù service online

bool StartBiasService()
{
   const string HEALTH = "http://127.0.0.1:8000/healthz";
   uchar send[], recv[]; string hdr="";

   // 0) cho ph√©p skip (h·ªØu √≠ch khi back-test h√†ng lo·∫°t)
   if(Skip_StartBiasService)
      return(true);

   // 1) service ƒë√£ ch·∫°y?
   if(WebRequest("GET",HEALTH,"",3000,send,recv,hdr)==200)
   {  Print("üü¢ BiasService ƒë√£ ch·∫°y s·∫µn (HTTP 200).");  return true; }

   Print("‚ÑπÔ∏è  BiasService ch∆∞a ch·∫°y ‚Äì kh·ªüi ƒë·ªông‚Ä¶");

   // 2) X√¢y ƒë√∫ng ƒë∆∞·ªùng d·∫´n .cmd n·∫±m c√πng project
   string eaPath  = MQLInfoString(MQL_PROGRAM_PATH);      // ‚Ä¶\Experts\Advisors\Bot\BiasBot.ex5
   int    posBot  = StringFind(eaPath,"\\Experts\\");     // t√°ch t·ªõi g·ªëc /Experts
   string rootDir = StringSubstr(eaPath,0,posBot+8);      // ‚Ä¶\Experts
   string cmdFile = rootDir + "\\Advisors\\Bot\\logic\\Detect\\BiasService\\StartBiasService.cmd";

   if(!FileIsExist(cmdFile))
   {  PrintFormat("‚ùå Kh√¥ng t√¨m th·∫•y %s", cmdFile); return false; }

   // 3) g·ªçi WinExec (·∫©n c·ª≠a s·ªï)
   if(WinExec(cmdFile,0)<31)
   {  Print("‚ùå WinExec th·∫•t b·∫°i ‚Äì ki·ªÉm tra quy·ªÅn DLL."); return false; }

   // 4) ch·ªù t·ªõi khi online
   ulong t0=GetTickCount();
   while(GetTickCount()-t0 < MAX_WAIT_MS)
   {
      if(WebRequest("GET",HEALTH,"",1500,send,recv,hdr)==200)
      {  Print("‚úÖ BiasService online, ready.");  return true; }
      Sleep(500);
   }
   Print("‚ö†Ô∏è  Ch∆∞a online sau ", DoubleToString(MAX_WAIT_MS/1000,0),"s.");
   return false;
}
#endif
